}
set.seed(1)
dim <- 100
C <- matrix(runif(dim^2, min = -5, max = 5), nrow = dim, ncol = dim)
D <- matrix(runif(dim^2, min = -5, max = 5), nrow = dim, ncol = dim)
A <- C + t(C)
B <- D %*% t(D)
N <- 10
start_rep <- matrix(rnorm(N*dim, mean = 1, sd = 10), nrow = N, ncol = dim)
dir <- "descent"
tol <- 1e-7
time_mm <- rep(0, N)
obj_mm <- rep(0, N)
eval_mm <- rep(0, N)
for (i in 1:N){
now <- start_rep[i,]
new <- start_rep[i,]
diff <- 100
iter <- 0
start.time <- Sys.time()
chain <- matrix(0, nrow = 1e6, ncol = dim)
while((diff > tol))
{
iter <- iter + 1
if(iter %% 1000 == 0) print(iter)
new <- update(now, A, B, dir = dir)
chain[iter,] <- new
diff <- sqrt(crossprod(new-now))
now <- new
}
end.time <- Sys.time()
time_mm[i] <- end.time - start.time
obj_mm[i] <- rayleigh(new, A, B, dir)
eval_mm[i] <- iter
chain <- chain[1:iter,]
}
time_bfgs <- rep(0, N)
obj_bfgs <- rep(0, N)
eval_bfgs <- rep(0, N)
for (i in 1:N){
start <- start_rep[i,]
start.time <- Sys.time()
fp <- BFGS(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir, control = list(qn=1, tol = tol, objfn.inc = 1, step.max = 1000, step.min=.1, maxiter = 5e4, intermed = TRUE))
end.time <- Sys.time()
time_bfgs[i] <- end.time - start.time
obj_bfgs[i] <- fp$value.objfn
eval_bfgs[i] <- fp$fpevals
chain <- (fp$p.inter)
}
########################################
## L-BFGS
########################################
time_lbfgs <- rep(0, N)
obj_lbfgs <- rep(0, N)
eval_lbfgs <- rep(0, N)
for (i in 1:N){
start <- start_rep[i,]
start.time <- Sys.time()
fp <- LBFGS(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir, control = list(m=10, tol = tol, objfn.inc = 1, maxiter = 5e4, intermed = TRUE))
end.time <- Sys.time()
time_lbfgs[i] <- end.time - start.time
obj_lbfgs[i] <- fp$value.objfn
eval_lbfgs[i] <- fp$fpevals
chain <- (fp$p.inter)
}
##########################################
### SqS1
#############################################
time_sq1 <- rep(0, N)
obj_sq1 <- rep(0, N)
eval_sq1 <- rep(0, N)
for (i in 1:N){
print(i)
start <- start_rep[i,]
start.time <- Sys.time()
fp <- squarem(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir, control = list(K=2, tol = tol, method = 1, maxiter = 5e4, intermed = TRUE))
end.time <- Sys.time()
time_sq1[i] <- end.time - start.time
obj_sq1[i] <- fp$value.objfn
eval_sq1[i] <- fp$fpevals
}
##########################################
### SqS2
#############################################
time_sq2 <- rep(0, N)
obj_sq2 <- rep(0, N)
eval_sq2 <- rep(0, N)
for (i in 1:N){
print(i)
start <- start_rep[i,]
start.time <- Sys.time()
fp <- squarem(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir, control = list(K=2, tol = tol, method = 2, maxiter = 5e4, intermed = TRUE))
end.time <- Sys.time()
time_sq2[i] <- end.time - start.time
obj_sq2[i] <- fp$value.objfn
eval_sq2[i] <- fp$fpevals
}
##########################################
### SqS3
#############################################
time_sq3 <- rep(0, N)
obj_sq3 <- rep(0, N)
eval_sq3 <- rep(0, N)
for (i in 1:N){
print(i)
start <- start_rep[i,]
start.time <- Sys.time()
fp <- squarem(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir, control = list(K=2, tol = tol, method = 3, maxiter = 5e4, intermed = TRUE))
end.time <- Sys.time()
time_sq3[i] <- end.time - start.time
obj_sq3[i] <- fp$value.objfn
eval_sq3[i] <- fp$fpevals
}
##########################################
## Zhou's quasi-Newton for q=2
##########################################
time_zal <- rep(0, N)
obj_zal <- rep(0, N)
eval_zal <- rep(0, N)
for (i in 1:N){
start <- start_rep[i,]
start.time <- Sys.time()
fp <- qnamm(x = start, fx_mm = update, fx_obj = rayleigh, qn=2, A=A, B=B, dir=dir, max_iter = 5e4, tol=tol)
end.time <- Sys.time()
time_zal[i] <- end.time - start.time
obj_zal[i] <- fp$objective
eval_zal[i] <- fp$fevals
chain <- t(fp$Xhist)
}
##############################################
save(time_mm, time_bfgs, time_lbfgs, time_sq1, time_sq2, time_sq3, time_zal,
eval_mm, eval_bfgs, eval_lbfgs, eval_sq1, eval_sq2, eval_sq3, eval_zal,
obj_mm, obj_bfgs, obj_lbfgs, obj_sq1, obj_sq2, obj_sq3, obj_zal, file = "Out/eigen-objects_sd10.Rdata")
load("Out/eigen-objects_sd10.Rdata")
time_range <- range(time_mm, time_bfgs, time_lbfgs, time_sq1, time_sq2, time_sq3, time_zal)
eval_range <- range(eval_mm, eval_bfgs, eval_lbfgs, eval_sq1, eval_sq2, eval_sq3, eval_zal)
obj_range <- range(obj_mm, obj_bfgs, obj_lbfgs, obj_sq1, obj_sq2, obj_sq3, obj_zal)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = obj_range, pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = obj_range, pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-3, obj_range[2]+1e-3), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=2)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-4, obj_range[2]+1e-4), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-5, obj_range[2]+1e-5), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-6, obj_range[2]+1e-6), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-7, obj_range[2]+1e-7), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=2)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-8, obj_range[2]+1e-8), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19)
pdf(file = "Out/eigen-objVSeval_sd10.pdf")
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-8, obj_range[2]+1e-8), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19)
dev.off()
pdf(file = "Out/eigen-objVStime_sd10.pdf")
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-8, obj_range[2]+1e-8), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(time_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(time_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1)
dev.off()
pdf(file = "Out/eigen-objVSeval_sd10.pdf")
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-8, obj_range[2]+1e-8), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
pdf(file = "Out/eigen-objVStime_sd10.pdf")
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-8, obj_range[2]+1e-8), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(time_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(time_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
setwd("~/GitHub/Quasi-Newton-accelerated-MM/Examples/GenEigen")
time_range <- range(time_mm, time_bfgs, time_lbfgs, time_sq1, time_sq2, time_sq3, time_zal)
eval_range <- range(eval_mm, eval_bfgs, eval_lbfgs, eval_sq1, eval_sq2, eval_sq3, eval_zal)
obj_range <- range(obj_mm, obj_bfgs, obj_lbfgs, obj_sq1, obj_sq2, obj_sq3, obj_zal)
pdf(file = "Out/eigen-objVSeval_sd10.pdf")
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-8, obj_range[2]+1e-8), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
pdf(file = "Out/eigen-objVStime_sd10.pdf")
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-8, obj_range[2]+1e-8), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(time_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(time_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-9, obj_range[2]+1e-9), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
pdf(file = "Out/eigen-objVSeval_sd10.pdf")
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-9, obj_range[2]+1e-9), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-9, obj_range[2]+1e-9), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(time_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(time_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
pdf(file = "Out/eigen-objVStime_sd10.pdf")
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-9, obj_range[2]+1e-9), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(time_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(time_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-9, obj_range[2]-1e-9), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-9, obj_range[2]-1e-8), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(time_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(time_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-9, obj_range[2]-1e-8), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
pdf(file = "Out/eigen-objVSeval_sd10.pdf")
plot(eval_mm, obj_mm, col = "red", xlim=eval_range, ylim = c(obj_range[1]-1e-9, obj_range[2]-1e-8), pch=19, cex=2, xlab="Evaluations", ylab="Objective")
points(eval_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(eval_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(eval_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19, cex=2)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(eval_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
pdf(file = "Out/eigen-objVStime_sd10.pdf")
plot(time_mm, obj_mm, col = "red", xlim=time_range, ylim = c(obj_range[1]-1e-9, obj_range[2]-1e-8), pch=19, cex=2, xlab="Time", ylab="Objective")
points(time_bfgs, obj_bfgs, col="purple", pch=19, cex=2)
points(time_lbfgs, obj_lbfgs, col="pink", pch=19, cex=2)
points(time_sq1, obj_sq1, col="lightblue", pch=19, cex=2)
#points(eval_sq2, obj_sq2, col=6, pch=19)
#points(eval_sq3, obj_sq3, col=7, pch=19)
points(time_zal, obj_zal, col="steelblue1", pch=19, cex=2)
legend("topright", legend = c("MM", "BFGS", "L-BFGS", "SQUAREM", "ZAL"),
col =c("red", "purple", "pink", "lightblue", "steelblue1"), pch=19, cex=1.5)
dev.off()
setwd("~/GitHub/Quasi-Newton-accelerated-MM/Examples/MultiT")
library(LaplacesDemon)
library(pracma)
library(SQUAREM)
library(BfgsQN)
source("qnamm.r")
VecToMat <- function(vec, dim){
a <- matrix(0, dim, dim)
a[upper.tri(a, diag = TRUE)] <- vec
a = a + t(a)
diag(a) <- diag(a)/2
return(a)
}
likelihood <- function(par, n, dim, data){
mu <- par[1:dim]
sigma <- VecToMat(par[-(1:dim)], dim)
like <- (n*log(det(sigma)))/2
sig.inv <- solve(sigma)
for (i in 1:n){
like = like + ((1+dim)/2) * log(1 + t(data[i,] - mu) %*% sig.inv %*% (data[i,] - mu))
}
return(like)
}
update <-  function(par, n, dim, data){
mu <- par[1:dim]
sigma <- VecToMat(par[-(1:dim)], dim)
sig.inv <- solve(sigma)
weights <- as.matrix(rep(0, n))
new.mu <- rep(0,dim)
new.sigma <- matrix(0, dim, dim)
for (i in 1:n){
weights[i] <- (1+dim)/(1 + (t(data[i,] - mu) %*% sig.inv %*% (data[i,] - mu)))
new.mu <- new.mu + weights[i]*as.matrix(data[i,])
new.sigma <- new.sigma + weights[i]*((data[i,] - mu) %*% t(data[i,] - mu))
}
new.mu <- new.mu/sum(weights)
new.sigma <- new.sigma/n
return (c(new.mu, upper.triangle(new.sigma, diag = TRUE)))
}
update_pxem <-  function(par, n, dim, data){
mu <- par[1:dim]
sigma <- VecToMat(par[-(1:dim)], dim)
sig.inv <- solve(sigma)
weights <- as.matrix(rep(0, n))
new.mu <- rep(0,dim)
new.sigma <- matrix(0, dim, dim)
for (i in 1:n){
weights[i] <- (1+dim)/(1 + (t(data[i,] - mu) %*% sig.inv %*% (data[i,] - mu)))
new.mu <- new.mu + weights[i]*as.matrix(data[i,])
new.sigma <- new.sigma + weights[i]*((data[i,] - mu) %*% t(data[i,] - mu))
}
new.mu <- new.mu/sum(weights)
new.sigma <- new.sigma/sum(weights)
return (c(new.mu, upper.triangle(new.sigma, diag = TRUE)))
}
set.seed(10)
set.seed(10)
dim <- 10
tol <- 1e-5
P <- (dim/2)*(dim+3)
n <- 100
mu <- rep(0, dim)
u <- matrix(rnorm(dim*dim), dim, dim)
sigma <- t(u) %*% u
N <- 1
start_rep <- matrix(0, nrow = N, ncol = P)
for (i in 1:N)
{
data <- rmvc(n=n, mu = mu, S = sigma)
mu0 <- colMeans(data)
sigma0 <- cov(data)
start_rep[i,] <- c(mu0, upper.triangle(sigma0, diag=  TRUE))
}
time_mm <- rep(0, N)
obj_mm <- rep(0, N)
eval_mm <- rep(0, N)
for (i in 1:N){
print(i)
now <- start_rep[i,]
new <- start_rep[i,]
objval <- likelihood(now, n=n, dim=dim, data=data)
chain_mm <- objval
diff <- 100
iter <- 0
start.time <- Sys.time()
chain <- matrix(0, nrow = 1e6, ncol = P)
while((diff > tol))
{
iter <- iter + 1
if(iter %% 1000 == 0) print(iter)
new <- update(now, n=n, dim=dim, data=data)
objval <- likelihood(new, n=n, dim=dim, data=data)
chain_mm <- c(chain_mm, objval)
chain[iter,] <- new
diff <- sqrt(crossprod(new-now))
now <- new
}
end.time <- Sys.time()
chain <- chain[1:iter,]
time_mm[i] <- end.time - start.time
obj_mm[i] <- likelihood(new, n=n, dim=dim, data=data)
eval_mm[i] <- iter
plot(chain[,159], chain[,160], xlim = range(chain[,159]), ylim = range(chain[,160]))
points(chain[1,159], chain[1,160], col = "green", pch=19, cex=1.5)
points(chain[iter,159], chain[iter,160], col = "red", pch=19, cex=1.5)
}
print(quantile(time_mm, probs = c(0, .5, 1)))
print(quantile(eval_mm, probs = c(0, .5, 1)))
print(quantile(obj_mm, probs = c(0, .5, 1)))
time_mm <- rep(0, N)
obj_mm <- rep(0, N)
eval_mm <- rep(0, N)
for (i in 1:N){
print(i)
now <- start_rep[i,]
new <- start_rep[i,]
objval <- likelihood(now, n=n, dim=dim, data=data)
chain_mm <- objval
diff <- 100
iter <- 0
start.time <- Sys.time()
chain <- matrix(0, nrow = 1e6, ncol = P)
while((diff > tol))
{
iter <- iter + 1
if(iter %% 1000 == 0) print(iter)
new <- update(now, n=n, dim=dim, data=data)
objval <- likelihood(new, n=n, dim=dim, data=data)
chain_mm <- c(chain_mm, objval)
chain[iter,] <- new
diff <- sqrt(crossprod(new-now))
now <- new
}
end.time <- Sys.time()
chain <- chain[1:iter,]
time_mm[i] <- end.time - start.time
obj_mm[i] <- likelihood(new, n=n, dim=dim, data=data)
eval_mm[i] <- iter
#plot(chain[,159], chain[,160], xlim = range(chain[,159]), ylim = range(chain[,160]))
#points(chain[1,159], chain[1,160], col = "green", pch=19, cex=1.5)
#points(chain[iter,159], chain[iter,160], col = "red", pch=19, cex=1.5)
}
print(quantile(time_mm, probs = c(0, .5, 1)))
print(quantile(eval_mm, probs = c(0, .5, 1)))
print(quantile(obj_mm, probs = c(0, .5, 1)))
setwd("~/GitHub/Quasi-Newton-accelerated-MM/Examples/GenEigen")
load("Out/eigen-objects_sd10.Rdata")
time_bfgs
eval_bfgs
eval_lbfgs
eval_sq1
eval_mm
eval_bfgs
eval_lbfgs
eval_sq1
eval_sq2
eval_zal
time_mm
time_bfgs
time_lbfgs
time_sq1
time_sq2
time_sq3
time_zal
