N <- 200
m <- N/2
theta1 <- 0.1
theta2 <- 1
i=1
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])
W1 <- diag(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (m/(N-m))*t(A)%*%W0%*%integrands[1:m,]
A
mu_ICF[i]
W
W0
W1 <- diag(weights[(m+1):N])
W0 <- diag(weights[1:m])
W0
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
W0 <- diag(weights[1:m])
W0
diag(W0)
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (m/(N-m))*t(A)%*%W0%*%integrands[1:m,]
mu_ICF[i]
mu_AM[i]
t(ones(N-m))%*%W1%*%integrands[(m+1):N,]
(m/(N-m))*t(A)%*%W0%*%integrands[1:m,]
t(A)%*%W0%*%integrands[1:m,]
A
t(A)%*%W0%*%integrands[1:m,]
(1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ICF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
p <- 0
mu1 <- 0
mu2 <-0
sd1 <- 1
sd2 <- 1
N <- 200
m <- N/2
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
rep <- 100
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ICF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
p <- 0
mu1 <- 0
mu2 <-0
sd1 <- 1
sd2 <- 1
N <- 200
m <- N/2
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights)
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights)
W1 <- diag(weights[(m+1):N])/sum(weights)
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights)
W1 <- diag(weights[(m+1):N])/sum(weights)
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] +t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
rep <- 100
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ICF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
p <- 0.5
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 1
N <- 200
m <- N/2
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
m <- N/1.5
theta1 <- 0.1
theta2 <- 1
m <- N/1.5
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
m <- N
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
m <- N-1
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
m <- N-2
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
m <- N/2
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
p <- 0.5
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 1
N <- 50
m <- N/2
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
N <- 40
m <- N/2
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean(weights*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
A
t(A)%*%ones(m)
(t(A)%*%ones(m))/(100)
theta1 <- 0.1
theta2 <- 1
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- mean((weights/sum(weights))*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ICF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
p <- 0.5
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 1
N <- 100
m <- N/2
theta1 <- 0.1
theta2 <- 1
(exp(-1.5) + exp(2.5))/2
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
sum((weights/sum(weights))*integrands)
for (i in 1:rep){
if(i%%10 == 0) print(i)
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- sum((weights/sum(weights))*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
mu_ICF[i] <- t(ones(N-m))%*%W1%*%integrands[(m+1):N,] + (1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
}
boxplot(data.frame("AM" = mu_AM, "ICF" = mu_ICF))
(weights/sum(weights))*integrands))
(weights/sum(weights))*integrands)
(weights/sum(weights))*integrands
sum(((weights/sum(weights))*integrands)[(m+1):N])
sum(((weights/sum(weights))*integrands)
)
sum(((weights[(m+1):n]/sum(weights[(m+1):n]))*integrands)
)
sum((weights[(m+1):n]/sum(weights[(m+1):n]))*integrands)
sum((weights[(m+1):N]/sum(weights[(m+1):N]))*integrands)
sum((weights[(m+1):N]/sum(weights[(m+1):N]))*integrands[(m+1):N])
t(ones(N-m))%*%W1%*%integrands[(m+1):N,]
(1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
m=N-3
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
mu_AM[i] <- sum((weights/sum(weights))*integrands)
A <- vecA(as.matrix(is.samp, nrow = N, ncol = 1), m, theta1, theta2)
W0 <- diag(weights[1:m])/sum(weights[1:m])
W1 <- diag(weights[(m+1):N])/sum(weights[(m+1):N])
t(ones(N-m))%*%W1%*%integrands[(m+1):N,]
(1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
t(ones(N-m))%*%W1%*%integrands[(m+1):N,]
integrands[(m+1):N,]
is.samp <- rnorm(N, sd = 2)
weights <- (p*dnorm(is.samp, mean = mu1, sd=  sd1) + (1-p)*dnorm(is.samp, mean = mu2, sd = sd2))/dnorm(is.samp, sd=2)
grad <- as.matrix(apply(as.matrix(is.samp, N, 1), 1, u, p, mu1, mu2, sd1, sd2), nrow = N, ncol = 1)
integrands <- as.matrix(exp(is.samp), nrow = N, ncol = 1)
integrands[(m+1):N,]
W1%*%integrands[(m+1):N,]
t(ones(N-m))%*%W1%*%integrands[(m+1):N,]
(1/(N-m))*t(A)%*%W0%*%integrands[1:m,]
(1/(N-m))
t(A)%*%W0%*%integrands[1:m,]
setwd("~/Documents/GitHub/Quasi-Newton-accelerated-MM/Examples/GenEigen")
rm(list = ls())
library(pracma)
library(turboEM)
library(quasiNewtonMM)
library(daarem)
source("functions.R")
set.seed(1)
dim <- 500
C <- matrix(runif(dim^2, min = -5, max = 5), nrow = dim, ncol = dim)
D <- matrix(runif(dim^2, min = -5, max = 5), nrow = dim, ncol = dim)
A <- C + t(C)
B <- D %*% t(D)
N <- 1
start_rep <- matrix(rnorm(N*dim, mean = 0, sd = 10), nrow = N, ncol = dim)
tol <- 1e-3
D <- c("descent", "ascent")
d=1
dir <- D[d]
print("Running SQUAREM-3")
time_sq3 <- rep(NA, N)
obj_sq3 <- rep(NA, N)
eval_sq3 <- rep(NA, N)
for (i in 1:N){
print(i)
start <- start_rep[i,]
start.time <- Sys.time()
fp <- turboem(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir,
method = "squarem", control.method = list(K=1, version=3, objfn.inc=0.01),
control.run = list(tol = tol, maxiter = 5e4))
end.time <- Sys.time()
if(fp$convergence){
time_sq3[i] <- end.time - start.time
obj_sq3[i] <- fp$value.objfn
eval_sq3[i] <- fp$fpeval
}
}
print(paste("Number of failures: ", sum(is.na(time_sq3))))
print(quantile(time_sq3, probs = c(.5, .25, .75)))
print("Running ZAL-1")
time_zal <- rep(NA, N)
obj_zal <- rep(NA, N)
eval_zal <- rep(NA, N)
for (i in 1:N){
print(i)
start <- start_rep[i,]
start.time <- Sys.time()
fp <- turboem(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir,
method = "qn", control.method = list(qn=2),
control.run = list(tol = tol, maxiter = 5e4))
end.time <- Sys.time()
if(fp$convergence){
time_zal[i] <- end.time - start.time
obj_zal[i] <- fp$value.objfn
eval_zal[i] <- fp$fpeval
}
}
print(paste("Number of failures: ", sum(is.na(time_zal))))
print(quantile(time_zal))
print("Running ZAL-2")
time_zal2 <- rep(NA, N)
obj_zal2 <- rep(NA, N)
eval_zal2 <- rep(NA, N)
for (i in 1:N){
print(i)
start <- start_rep[i,]
start.time <- Sys.time()
fp <- turboem(par = start, fixptfn = update, objfn = rayleigh, A=A, B=B, dir=dir,
method = "qn", control.method = list(qn=2),
control.run = list(tol = tol, maxiter = 5e4))
end.time <- Sys.time()
if(fp$convergence){
time_zal2[i] <- end.time - start.time
obj_zal2[i] <- fp$value.objfn
eval_zal2[i] <- fp$fpeval
}
}
print(sum(is.na(time_zal2)))
print(paste("Number of failures: ", sum(is.na(time_zal2))))
print(quantile(time_zal2))
print("Running DAAREM")
time_dar <- rep(NA, N)
obj_dar <- rep(NA, N)
eval_dar <- rep(NA, N)
for (i in 1:N){
print(i)
start <- start_rep[i,]
start.time <- Sys.time()
fp <- daarem(par = start, fixptfn = update, objfn = daarem.objective, A=A, B=B,
dir=dir, control = list(tol = tol, maxiter = 5e4, mon.tol=0.01))
end.time <- Sys.time()
time_dar[i] <- end.time - start.time
obj_dar[i] <- -fp$value.objfn
eval_dar[i] <- fp$fpeval
}
print(quantile(round(time_dar[1], 3)))
print(quantile(round(eval_dar[1], 3)))
print(quantile(round((-1)^(d+1)*obj_dar[1], 3)))
